1. OOP
: 프로그램을 수많은 '객체(object)'라는 기본 단위로 나누고 이들의 상호작용으로 서술하는 방식
3 요소
- 캡슐화(encapsulation) (정보 은닉(information hiding)) : 변수와 함수를 하나의 단위로 묶는 것
- 상속(inheritance) :  자식 클래스가 부모 클래스의 특성과 기능을 그대로 물려받는 것
- 다형성(polymorphism) : 하나의 변수, 또는 함수가 상황에 따라 다른 의미로 해석될 수 있는 것

2. 오버라이딩
: 상위 클래스가 가지고 있는 메서드를 하위 클래스가 재정의해서 사용하는 것

17. 인터페이스와 추상 클래스 
- 인터페이스: 구현. 부모, 자식 관계인 상속 관계에 얽메이지 않고, 공통 기능이 필요 할때.
	     implements. 하지만 두 인터페이스 사이의 상속은 extends
- 추상 클래스: 여느 클래스들과 마찬가지로 인스턴스 변수와 인스턴스 메소드를 갖지만,
	      이를 상속하는 하위 클래스에 의해서 구현되어야 할 메소드가 하나 이상 있는 경우
	      extends
- 인터페이스와 추상클래스: Abstract Method를 구현하도록 강제하는 공통점

18. 예외처리
try ~ catch ~ finally
exception: runtime, runtime 아닌쪽
- RuntimeException: 실행 시 발생하는 예외. 발생할 수도 있고 발생하지 않을 수도 있는 경우
- Exception: 컴파일 시 발생하는 예외. 예측이 가능한 경우

19. 자바가상머신
자바 가상머신은 운영체제 위에서 실행되는 하나의 프로그램이다. 자바 프로그램은 자바 가상머신 위에서 실행되는 프로그램이다.
- 가상머신은 메모리 공간을 크게 세 개의 영억으로 나눈다.
  1) 메소드 영역: 메소드의 바이트코드, static 변수
  2) 스택 영역: 자역변수, 매개변수
  3) 힙 영역: 인스턴스

21. 제네릭
'일반화'. 자바에서 일반화의 대상은 자료형.
원하는 자료형을 정해서 박스에 넣고 박스에 있는 자료형을 컨트롤.
E: Element, K: Key, N: Number, T: Type, V: Value

23. 컬렉션 프레임워크
컬렉션은 다수의 요소를 하나의 그룹으로 묶어 효율적으로 저장하고, 관리할 수 있는 기능을 제공하는 일종의 컨테이너이다. 
배열은 크기가 고정되어 있는데에 반해, 컬렉션 프레임워크는 가변적인 크기를 갖는 (Resizable) 등의 특징을 갖는다
데이터 삽입, 탐색, 정렬 등 편리한 API 를 다수 제공
*List<E> 인터페이스를 구현하는 컬렉션 클래스들
 인덱스 순서로 요소를 저장한다. 중복된 데이터를 저장할 수 있다.
*Set<E> 인터페이스를 구현하는 컬렉션 클래스들
 순서가 없으며, 데이터를 중복하여 저장할 수 없다. 집합 연산 (합집합, 교집합, 차집합 등) 을 지원한다.
*Queue<E> 인터페이스를 구현하는 컬렉션 클래스들 (잘안씀)
 데이터가 저장된 순서대로 출력되는 선입선출 (FIFO: First In First Out) 의 구조를 갖는 선형 자료구조이다.
*Map<K,V> 인터페이스를 구현하는 컬렉션 클래스들
 Key-value 쌍으로 데이터를 저장한다. 순서가 존재하지 않으며, Key 가 중복될 수 없다.

HashSet 중복을 제거하기 위해 오버라이딩 필요




